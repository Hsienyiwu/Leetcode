# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        if not head and not head.next:
            return True
        #找中點
        slow = fast = head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        #翻轉後半部分
        prev, curr = None, slow
        while curr:
            curr.next, prev, curr = prev, curr, curr.next
        #比較
        while prev:
            if head.val != prev.val:
                return False
            head, prev = head.next, prev.next
        return True
