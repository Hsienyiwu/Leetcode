🧩 三、步驟流程
Step 1️⃣：建立 MLflow Tracking Server
mlflow server \
  --backend-store-uri sqlite:///mlflow.db \
  --default-artifact-root ./mlruns \
  --host 0.0.0.0 --port 5000


Step 2️⃣：訓練並追蹤模型
import mlflow
import mlflow.sklearn
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split

mlflow.set_tracking_uri("http://localhost:5000")
mlflow.set_experiment("iris_rf_demo")

X, y = load_iris(return_X_y=True)
X_train, X_test, y_train, y_test = train_test_split(X, y)

with mlflow.start_run():
    clf = RandomForestClassifier(n_estimators=100, max_depth=3)
    clf.fit(X_train, y_train)

    acc = clf.score(X_test, y_test)
    mlflow.log_metric("accuracy", acc)
    mlflow.sklearn.log_model(clf, "model")


Step 3️⃣：模型版本管理（Registry）
result = mlflow.register_model(
    "runs:/<run_id>/model",
    "iris_classifier"
)

Step 4️⃣：使用 Docker 封裝模型服務
建立 Dockerfile：
FROM python:3.9
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY . .
CMD ["mlflow", "models", "serve", "-m", "models:/iris_classifier/1", "-p", "1234", "--host", "0.0.0.0"]
然後：
docker build -t iris-mlflow .
docker run -p 1234:1234 iris-mlflow
🔹 此時即可透過 http://localhost:1234/invocations 用 JSON 請求進行預測。

Step 5️⃣：測試推論 API
curl -X POST http://127.0.0.1:1234/invocations \
  -H "Content-Type: application/json" \
  -d '{"columns":["sepal_length","sepal_width","petal_length","petal_width"],
       "data":[[5.1,3.5,1.4,0.2]]}'
✅ 返回預測結果 (e.g. [0])。

